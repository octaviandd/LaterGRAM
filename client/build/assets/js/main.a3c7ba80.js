(self.webpackChunkclient=self.webpackChunkclient||[]).push([[179],{29445:(e,t,n)=>{"use strict";var r=n(4942),o=n(93379),i=n.n(o),a=n(7795),l=n.n(a),c=n(90569),p=n.n(c),s=n(3565),u=n.n(s),d=n(19216),m=n.n(d),f=n(44589),g=n.n(f),h=n(43234),x={};x.styleTagTransform=g(),x.setAttributes=u(),x.insert=p().bind(null,"head"),x.domAPI=l(),x.insertStyleElement=m();i()(h.Z,x);h.Z&&h.Z.locals&&h.Z.locals;var b,v,w,y,E,P,_,k,Z,I,C,O,j=n(67294),S=n(73935),N=n(39711),z=n(96974),D=n(29163),A=n(15861),U=n(70885),q=n(36459),L=n(87757),M=n.n(L),F=n(50319),B=n(30168),W=n(19098),V=(0,W.ZP)(b||(b=(0,B.Z)(["\n  mutation RegisterUserMutation($input: RegisterInput!) {\n    createUser(input: $input) {\n      user {\n        _id\n        name\n        username\n        email\n        avatar\n        createdAt\n        likedPosts {\n          _id\n        }\n        posts {\n          _id\n        }\n      }\n      token\n    }\n  }\n"]))),R=(0,W.ZP)(v||(v=(0,B.Z)(["\n  mutation GetUserMutation($input: LoginInput!) {\n    loginUser(input: $input) {\n      user {\n        _id\n        email\n        name\n        username\n        createdAt\n        avatar\n        posts {\n          _id\n        }\n        likedPosts {\n          _id\n        }\n        following {\n          _id\n        }\n        followers {\n          _id\n        }\n      }\n      token\n    }\n  }\n"]))),$=(0,W.ZP)(w||(w=(0,B.Z)(["\n  mutation CreatePost($input: NewPostInput!) {\n    createPost(input: $input) {\n      picture\n      _id\n      description\n      createdAt\n      likes {\n        _id\n      }\n      author {\n        _id\n        username\n        avatar\n      }\n      comments {\n        _id\n        content\n        author {\n          _id\n          avatar\n          username\n        }\n      }\n    }\n  }\n"]))),G=((0,W.ZP)(y||(y=(0,B.Z)(["\n  mutation ($file: Upload!) {\n    singleUpload(file: $file) {\n      filename\n      mimetype\n      encoding\n      uri\n    }\n  }\n"]))),(0,W.ZP)(E||(E=(0,B.Z)(["\n  mutation ($input: String!) {\n    changeAvatar(input: $input) {\n      _id\n      name\n      email\n      username\n      createdAt\n      avatar\n      posts {\n        _id\n      }\n      likedPosts {\n        _id\n      }\n      following {\n        _id\n        username\n        posts {\n          _id\n          picture\n          description\n          likes {\n            _id\n          }\n          author {\n            _id\n          }\n          comments {\n            _id\n            content\n            author {\n              _id\n              username\n            }\n          }\n        }\n      }\n      followers {\n        _id\n      }\n    }\n  }\n"])))),T=(0,W.ZP)(P||(P=(0,B.Z)(["\n  mutation CreateComment($input: NewCommentInput!) {\n    createComment(input: $input) {\n      _id\n      content\n      parentPost {\n        _id\n      }\n      author {\n        _id\n        username\n        avatar\n        name\n      }\n      createdAt\n      likes {\n        _id\n      }\n    }\n  }\n"]))),Q=(0,W.ZP)(_||(_=(0,B.Z)(["\n  mutation FollowUser($input: ID!) {\n    followUser(input: $input) {\n      _id\n      name\n      email\n      username\n      createdAt\n      avatar\n      posts {\n        _id\n      }\n      likedPosts {\n        _id\n      }\n      following {\n        _id\n        username\n        posts {\n          _id\n          picture\n          description\n          likes {\n            _id\n          }\n          author {\n            _id\n          }\n          comments {\n            _id\n            content\n            author {\n              _id\n              username\n            }\n          }\n        }\n      }\n      followers {\n        _id\n      }\n    }\n  }\n"]))),H=(0,W.ZP)(k||(k=(0,B.Z)(["\n  mutation UnfollowUser($input: ID!) {\n    unfollowUser(input: $input) {\n      _id\n    }\n  }\n"]))),K=(0,W.ZP)(Z||(Z=(0,B.Z)(["\n  mutation LikePost($input: ID!) {\n    likePost(input: $input) {\n      _id\n      createdAt\n      likes {\n        _id\n      }\n    }\n  }\n"]))),J=(0,W.ZP)(I||(I=(0,B.Z)(["\n  mutation UnlikePost($input: ID!) {\n    unlikePost(input: $input) {\n      _id\n      createdAt\n      likes {\n        _id\n      }\n    }\n  }\n"]))),X=((0,W.ZP)(C||(C=(0,B.Z)(["\n  mutation LikeComment($input: ID!) {\n    likeComment(input: $input) {\n      _id\n    }\n  }\n"]))),(0,W.ZP)(O||(O=(0,B.Z)(["\n  mutation unlikeComment($input: ID!) {\n    unlikeComment(input: $input) {\n      _id\n    }\n  }\n"]))),n(89583));function Y(e){return(0,q.Z)(e),j.createElement(te,null,j.createElement("div",{className:"spinner"},j.createElement("div",{className:"double-bounce1"}),j.createElement("div",{className:"double-bounce2"})))}var ee=(0,D.F4)(["0%,100%{transform:scale(0.0);-webkit-transform:scale(0.0);}50%{transform:scale(1.0);-webkit-transform:scale(1.0);}"]),te=D.ZP.div.withConfig({displayName:"Spinner__MainContainer",componentId:"sc-1arvw32-0"})(["position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);z-index:9999;width:40px;height:40px;.double-bounce1,.double-bounce2{width:100%;height:100%;border-radius:50%;background-color:",";opacity:0.6;position:absolute;top:0;left:0;-webkit-animation:"," 2s infinite ease-in-out;animation:"," 2s infinite ease-in-out;}.double-bounce2{-webkit-animation-delay:-1s;animation-delay:-1s;}"],(function(e){return e.theme.colors.buttonPrimary}),ee,ee);function ne(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function re(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ne(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ne(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var oe={passwordInput:"",emailInput:"",emailStatus:!1,passwordStatus:!1};function ie(e){(0,q.Z)(e);var t=(0,j.useState)({passwordInput:"",emailInput:"",emailStatus:!1,passwordStatus:!1}),n=(0,U.Z)(t,2),o=n[0],i=n[1],a=(0,F.D)(R),l=(0,U.Z)(a,2),c=l[0],p=l[1],s=(p.data,p.loading),u=p.error,d=(0,z.s0)(),m=function(){var e=(0,A.Z)(M().mark((function e(){return M().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,c({variables:{input:{email:o.emailInput,password:o.passwordInput}}}).then((function(e){var t=e.data;console.log(t),window.localStorage.setItem("token",t.loginUser.token),i(oe),d("/",{replace:!0})}));case 3:e.next=8;break;case 5:e.prev=5,e.t0=e.catch(0),console.error(u);case 8:case"end":return e.stop()}}),e,null,[[0,5]])})));return function(){return e.apply(this,arguments)}}(),f=function(e){var t=e.target.value;i((function(n){return re(re({},n),{},(0,r.Z)({},e.target.name,t))}))},g=function(e,t){i((function(n){return re(re({},n),{},(0,r.Z)({},e,t))}))};return(0,j.useEffect)((function(){""!==o.emailInput?g("emailStatus",!0):g("emailStatus",!1),""!==o.passwordInput?g("passwordStatus",!0):g("passwordStatus",!1)}),[o.passwordInput,o.emailInput]),s?j.createElement(Y,null):j.createElement(ae,null,j.createElement(le,null,j.createElement(ue,{onSubmit:function(e){e.preventDefault(),m()}},j.createElement("h4",null,"Sign up to see photos and videos from your friends."),j.createElement("label",null,j.createElement(ge,{emailStatus:o.emailStatus},"Username or e-mail"),j.createElement(de,{type:"email",name:"emailInput",onChange:function(e){return f(e)},value:o.emailValue,required:!0})),j.createElement("label",null,j.createElement(fe,{passwordStatus:o.passwordStatus},"Password"),j.createElement(de,{type:"password",name:"passwordInput",onChange:function(e){return f(e)},value:o.passwordValue,required:!0})),j.createElement(he,{type:"submit"},"Login"),u&&j.createElement(se,null,"Invalid credentials"))),j.createElement(ce,null,j.createElement("p",null,"Don't have an account? ",j.createElement(N.rU,{to:"/register"},"Sign up"))),j.createElement(pe,null,j.createElement("p",null,"Made by Octavian David"),j.createElement("a",{href:"http://github.com/octaviandd"},j.createElement(X.hJX,null))))}var ae=(0,D.ZP)("div").withConfig({displayName:"Inputs__Wrapper",componentId:"sc-p1776u-0"})(["display:flex;flex-direction:column;height:618px;max-width:350px;width:100%;flex-shrink:0;-webkit-box-shadow:4px 2px 23px -4px rgba(32,29,30,1);-moz-box-shadow:4px 2px 23px -4px rgba(32,29,30,1);box-shadow:4px 2px 23px -4px rgba(32,29,30,1);border-radius:20px;"]),le=D.ZP.section.withConfig({displayName:"Inputs__FormSection",componentId:"sc-p1776u-1"})(["background:rgba(var(--d87,255,255,255),1);width:100%;border-radius:20px;"]),ce=D.ZP.div.withConfig({displayName:"Inputs__RegisterLink",componentId:"sc-p1776u-2"})(["border-top:1px solid #dbdbdb;border-bottom:1px solid #dbdbdb;margin-bottom:0.3rem;p{padding:20px 15px;text-align:center;font-weight:400;color:black;a{text-decoration:none;color:#0095f6;font-weight:600;cursor:pointer;}}"]),pe=D.ZP.div.withConfig({displayName:"Inputs__WaterMark",componentId:"sc-p1776u-3"})(["border-bottom-left-radius:20px;border-bottom-right-radius:20px;display:flex;padding-top:3rem;padding-bottom:1rem;flex-direction:column;align-items:center;p{text-align:center;color:grey;}a{margin-top:1rem;color:grey;font-size:20px;}"]),se=D.ZP.div.withConfig({displayName:"Inputs__ErrorMsg",componentId:"sc-p1776u-4"})(["margin:10px 5px;background-color:#ff6767;color:white;padding:15px 17.5px;border-radius:6px;"]),ue=D.ZP.form.withConfig({displayName:"Inputs__StyledForm",componentId:"sc-p1776u-5"})(["padding:2rem 2.5rem;display:flex;flex-direction:column;align-items:center;border-top-left-radius:20px;border-top-right-radius:20px;h1{font-size:40px;margin-bottom:2rem;color:whitesmoke;}h4{text-align:center;margin-bottom:0.525rem;color:#8e8e8e;padding-bottom:1.6rem;}label{position:relative;margin-bottom:7.5px;width:100%;}"]),de=D.ZP.input.withConfig({displayName:"Inputs__StyledField",componentId:"sc-p1776u-6"})(["padding:9px 0 7px 8px;width:100%;border:1px solid #dbdbdb;background-color:#fafafa;font-size:16px;cursor:auto;border-radius:3px;text-overflow:ellipsis;&:focus{outline:#a2a2a2;border:1px solid #a2a2a2;}"]),me=D.ZP.span.withConfig({displayName:"Inputs__TextLegend",componentId:"sc-p1776u-7"})(["position:absolute;top:30%;left:3.5%;color:#a2a2a2;cursor:auto;font-size:14px;transition:all 0.1s ease-in-out;"]),fe=(0,D.ZP)(me).withConfig({displayName:"Inputs__PasswordLegend",componentId:"sc-p1776u-8"})(["",""],(function(e){return e.passwordStatus&&"\n      left: 8px;\n      font-size: 10px;\n      top: 5px;\n      overflow:hidden;\n      color: rgba(var(--f52,142,142,142),1);\n      text-overflow: ellipsis;\n      + input {\n        padding: 14px 0 2px 8px;\n        font-size: 12px;\n      }\n    "})),ge=(0,D.ZP)(me).withConfig({displayName:"Inputs__EmailLegend",componentId:"sc-p1776u-9"})(["",""],(function(e){return e.emailStatus&&"\n      left: 8px;\n      font-size: 10px;\n      top: 5px;\n      overflow:hidden;\n      color: rgba(var(--f52,142,142,142),1);\n      text-overflow: ellipsis;\n      + input {\n        padding: 14px 0 2px 8px;\n        font-size: 12px;\n      }\n    "})),he=D.ZP.button.withConfig({displayName:"Inputs__SubmitButton",componentId:"sc-p1776u-10"})(["width:100%;background-color:",";font-size:14px;color:#fff;font-weight:600;border:1px solid transparent;border-radius:5px;cursor:pointer;padding:4px 2px;"],(function(e){return e.theme.colors.buttonPrimary}));function xe(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function be(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?xe(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):xe(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function ve(){var e=(0,j.useState)({activeSlide:0,_slides:["/assets/carousel4.jpg","/assets/carousel1.jpg","/assets/carousel3.jpg","/assets/carousel2.jpg"]}),t=(0,U.Z)(e,2),n=t[0],r=t[1],o=n.activeSlide,i=n._slides,a=(0,j.useRef)(),l=function(){r(be(be({},n),{},{activeSlide:o===i.length-1?0:o+1}))};return(0,j.useEffect)((function(){a.current=l})),(0,j.useEffect)((function(){var e=setInterval((function(){a.current()}),3e3);return function(){clearInterval(e)}}),[o]),j.createElement(ye,null,j.createElement(we,null),j.createElement(_e,null,j.createElement(Pe,{translate:o},i.map((function(e,t){return j.createElement(Ee,{currentPicture:e,key:t})})))))}var we=D.ZP.div.withConfig({displayName:"Carousel__ImageHolder",componentId:"sc-1yrx6v2-0"})(["background-image:url(",");background-position:0 0;background-repeat:no-repeat;background-size:454px 618px;width:475px;height:618px;"],"/assets/loginpage.png"),ye=D.ZP.div.withConfig({displayName:"Carousel__Wrapper",componentId:"sc-1yrx6v2-1"})(["position:relative;"]),Ee=D.ZP.div.withConfig({displayName:"Carousel",componentId:"sc-1yrx6v2-2"})(["width:240px;height:430px;overflow:hidden;background-image:url(",");background-size:contain;"],(function(e){return e.currentPicture})),Pe=D.ZP.div.withConfig({displayName:"Carousel__SliderContent",componentId:"sc-1yrx6v2-3"})(["position:absolute;display:flex;width:960px;height:430px;overflow:hidden;transform:translate(",");transition:transform ease-out 0.35s;"],(function(e){return"-"+240*e.translate+"px"})),_e=D.ZP.div.withConfig({displayName:"Carousel__Container",componentId:"sc-1yrx6v2-4"})(["width:240px;position:absolute;overflow:hidden;height:430px;top:99px;right:84px;"]),ke="450px",Ze="876px";const Ie={xs:"@media (max-width: ".concat("320px",")"),sm:"@media (max-width: ".concat(ke,")"),md:"@media (max-width: ".concat(Ze,")")};function Ce(){return j.createElement(Oe,null,j.createElement(je,null,j.createElement(ve,null)),j.createElement(Se,null,j.createElement("div",null,j.createElement(Ne,null,"LaterGRAM")),j.createElement(ie,null)))}var Oe=D.ZP.div.withConfig({displayName:"Login__Grid",componentId:"sc-1cgqj29-0"})(["display:flex;align-items:center;justify-content:center;"]),je=D.ZP.div.withConfig({displayName:"Login__LeftColumn",componentId:"sc-1cgqj29-1"})(["","{display:none;}"],Ie.md),Se=D.ZP.div.withConfig({displayName:"Login__RightColumn",componentId:"sc-1cgqj29-2"})(["display:flex;flex-direction:column;align-items:center;"]),Ne=D.ZP.h1.withConfig({displayName:"Login__Logo",componentId:"sc-1cgqj29-3"})(['font-family:"Zen Tokyo Zoo",cursive;font-size:40px;']);function ze(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function De(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ze(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ze(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var Ae={nameInput:"",emailInput:"",passwordInput:"",usernameInput:"",nameStatus:!1,emailStatus:!1,passwordStatus:!1,usernameStatus:!1,emailError:!1,emailErrorMessage:"",passwordError:!1,passwordErrorMessage:"",nameError:!1,nameErrorMessage:"",usernameError:!1,usernameErrorMessage:""};function Ue(e){(0,q.Z)(e);var t=(0,j.useState)({nameInput:"",emailInput:"",passwordInput:"",usernameInput:"",nameStatus:!1,emailStatus:!1,passwordStatus:!1,usernameStatus:!1,emailError:!1,emailErrorMessage:"",passwordError:!1,passwordErrorMessage:"",nameError:!1,nameErrorMessage:"",usernameError:!1,usernameErrorMessage:""}),n=(0,U.Z)(t,2),o=n[0],i=n[1],a=(0,F.D)(V),l=(0,U.Z)(a,2),c=l[0],p=l[1],s=(p.data,p.loading),u=(p.error,(0,z.s0)()),d=function(){var e=(0,A.Z)(M().mark((function e(){return M().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,c({variables:{input:{name:o.nameInput,username:o.usernameInput,email:o.emailInput,password:o.passwordInput}}}).then((function(e){window.localStorage.setItem("token",e.data.createUser.token),i(Ae),u("/",{replace:!0})}));case 3:e.next=8;break;case 5:e.prev=5,e.t0=e.catch(0),console.log(e.t0);case 8:case"end":return e.stop()}}),e,null,[[0,5]])})));return function(){return e.apply(this,arguments)}}(),m=function(e){var t=e.target.value;i((function(n){return De(De({},n),{},(0,r.Z)({},e.target.name,t))}))},f=function(e,t){i((function(n){return De(De({},n),{},(0,r.Z)({},e,t))}))};return(0,j.useEffect)((function(){""!==o.emailInput?f("emailStatus",!0):f("emailStatus",!1),""!==o.passwordInput?f("passwordStatus",!0):f("passwordStatus",!1),""!==o.usernameInput?f("usernameStatus",!0):f("usernameStatus",!1),""!==o.nameInput?f("nameStatus",!0):f("nameStatus",!1)}),[o.passwordInput,o.emailInput,o.usernameInput,o.nameInput,o.emailError,o.nameError,o.usernameError,o.passwordError]),s?j.createElement(Y,null):j.createElement(qe,null,j.createElement(Le,null,j.createElement(Fe,{onSubmit:function(e){e.preventDefault(),d()}},j.createElement("h4",null,"Sign up to see photos and videos from your friends."),j.createElement("label",null,j.createElement(Ge,{emailStatus:o.emailStatus},"Email"),j.createElement(Be,{type:"email",name:"emailInput",onChange:function(e){return m(e)},required:!0})),j.createElement("label",null,j.createElement(Ve,{nameStatus:o.nameStatus},"Name"),j.createElement(Be,{min:2,max:20,type:"text",name:"nameInput",onChange:function(e){return m(e)},required:!0})),j.createElement("label",null,j.createElement($e,{usernameStatus:o.usernameStatus},"Username"),j.createElement(Be,{min:2,max:20,type:"text",name:"usernameInput",onChange:function(e){return m(e)},required:!0})),j.createElement("label",null,j.createElement(Re,{passwordStatus:o.passwordStatus},"Password"),j.createElement(Be,{min:6,max:20,type:"password",name:"passwordInput",onChange:function(e){return m(e)},required:!0})),j.createElement(Te,{type:"submit"},"Register")),j.createElement(Me,null,j.createElement("p",null,"Have an account?",j.createElement(N.rU,{to:"/login"}," Log In")))))}var qe=D.ZP.section.withConfig({displayName:"Inputs__Wrapper",componentId:"sc-1qzj6kb-0"})(['width:100%;min-height:100vh;position:relative;font-family:"Roboto",sans-serif;']),Le=D.ZP.div.withConfig({displayName:"Inputs__InnerWrapper",componentId:"sc-1qzj6kb-1"})(["display:flex;flex-direction:column;height:618px;max-width:350px;width:100%;flex-shrink:0;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);-webkit-box-shadow:4px 2px 23px -4px rgba(32,29,30,1);-moz-box-shadow:4px 2px 23px -4px rgba(32,29,30,1);box-shadow:4px 2px 23px -4px rgba(32,29,30,1);border-radius:20px;"]),Me=D.ZP.div.withConfig({displayName:"Inputs__Redirect",componentId:"sc-1qzj6kb-2"})(["border-top:1px solid #dbdbdb;border-bottom:1px solid #dbdbdb;margin-bottom:0.3rem;p{padding:20px 15px;text-align:center;font-weight:400;color:black;a{text-decoration:none;color:#0095f6;font-weight:600;cursor:pointer;}}"]),Fe=D.ZP.form.withConfig({displayName:"Inputs__StyledForm",componentId:"sc-1qzj6kb-3"})(["padding:2rem 2.5rem;display:flex;flex-direction:column;align-items:center;border-top-left-radius:20px;border-top-right-radius:20px;h1{font-size:40px;margin-bottom:2rem;color:whitesmoke;}h4{text-align:center;margin-bottom:0.525rem;color:#8e8e8e;padding-bottom:1.6rem;}label{position:relative;margin-bottom:7.5px;width:100%;}"]),Be=D.ZP.input.withConfig({displayName:"Inputs__StyledField",componentId:"sc-1qzj6kb-4"})(["padding:9px 0 7px 8px;width:100%;border:1px solid #dbdbdb;background-color:#fafafa;font-size:16px;cursor:auto;border-radius:3px;text-overflow:ellipsis;&:focus{outline:#a2a2a2;border:1px solid #a2a2a2;}"]),We=D.ZP.span.withConfig({displayName:"Inputs__TextLegend",componentId:"sc-1qzj6kb-5"})(["position:absolute;top:30%;left:3.5%;color:#a2a2a2;cursor:auto;font-size:14px;transition:all 0.1s ease-in-out;"]),Ve=(0,D.ZP)(We).withConfig({displayName:"Inputs__NameLegend",componentId:"sc-1qzj6kb-6"})(["",""],(function(e){return e.nameStatus&&"\n      left: 8px;\n      font-size: 10px;\n      top: 5px;\n      overflow:hidden;\n      color: rgba(var(--f52,142,142,142),1);\n      text-overflow: ellipsis;\n\n      + input {\n        padding: 14px 0 2px 8px;\n        font-size: 12px;\n      }\n    "})),Re=(0,D.ZP)(We).withConfig({displayName:"Inputs__PasswordLegend",componentId:"sc-1qzj6kb-7"})(["",""],(function(e){return e.passwordStatus&&"\n      left: 8px;\n      font-size: 10px;\n      top: 5px;\n      overflow:hidden;\n      color: rgba(var(--f52,142,142,142),1);\n      text-overflow: ellipsis;\n      + input {\n        padding: 14px 0 2px 8px;\n        font-size: 12px;\n      }\n    "})),$e=(0,D.ZP)(We).withConfig({displayName:"Inputs__UsernameLegend",componentId:"sc-1qzj6kb-8"})(["",""],(function(e){return e.usernameStatus&&"\n      left: 8px;\n      font-size: 10px;\n      top: 5px;\n      overflow:hidden;\n      color: rgba(var(--f52,142,142,142),1);\n      text-overflow: ellipsis;\n      + input {\n        padding: 14px 0 2px 8px;\n        font-size: 12px;\n      }\n    "})),Ge=(0,D.ZP)(We).withConfig({displayName:"Inputs__EmailLegend",componentId:"sc-1qzj6kb-9"})(["",""],(function(e){return e.emailStatus&&"\n      left: 8px;\n      font-size: 10px;\n      top: 5px;\n      overflow:hidden;\n      color: rgba(var(--f52,142,142,142),1);\n      text-overflow: ellipsis;\n      + input {\n        padding: 14px 0 2px 8px;\n        font-size: 12px;\n      }\n    "})),Te=D.ZP.button.withConfig({displayName:"Inputs__SubmitButton",componentId:"sc-1qzj6kb-10"})(["width:100%;background-color:",";font-size:14px;color:#fff;font-weight:600;border:1px solid transparent;border-radius:5px;cursor:pointer;padding:4px 2px;"],(function(e){return e.theme.colors.buttonPrimary}));function Qe(){return j.createElement(tt,null,j.createElement(nt,null,j.createElement("h1",null,"LaterGRAM"),j.createElement("h3",null,"Would you mind me taking your data? :d")),j.createElement(Ue,null))}var He,Ke,Je,Xe,Ye,et,tt=D.ZP.section.withConfig({displayName:"Register__Wrapper",componentId:"sc-i3kmnk-0"})(["position:relative;display:flex;justify-content:center;align-items:center;"]),nt=D.ZP.div.withConfig({displayName:"Register__Logo",componentId:"sc-i3kmnk-1"})(["width:100%;text-align:center;",'{display:none;}h1{font-family:"Zen Tokyo Zoo",cursive !important;font-size:60px;}'],Ie.md),rt=n(71641),ot=n(42982),it=(0,W.ZP)(He||(He=(0,B.Z)(["\n  query GetCurrentUser {\n    data: getMe {\n      _id\n      name\n      email\n      username\n      createdAt\n      avatar\n      posts {\n        _id\n      }\n      likedPosts {\n        _id\n      }\n      following {\n        _id\n        username\n        posts {\n          _id\n          picture\n          description\n          likes {\n            _id\n          }\n          author {\n            _id\n          }\n          comments {\n            _id\n            content\n            author {\n              _id\n              username\n            }\n          }\n        }\n      }\n      followers {\n        _id\n      }\n    }\n  }\n"]))),at=(0,W.ZP)(Ke||(Ke=(0,B.Z)(["\n  query GetUsers {\n    getUsers {\n      _id\n      name\n      username\n      email\n      createdAt\n      avatar\n      posts {\n        _id\n      }\n      likedPosts {\n        _id\n      }\n      followers {\n        _id\n      }\n      following {\n        _id\n      }\n    }\n  }\n"]))),lt=(0,W.ZP)(Je||(Je=(0,B.Z)(["\n  query GetUser($input: ID!) {\n    data: getUserById(input: $input) {\n      _id\n      name\n      email\n      username\n      createdAt\n      avatar\n      posts {\n        _id\n        picture\n      }\n      likedPosts {\n        _id\n      }\n      following {\n        _id\n      }\n      followers {\n        _id\n      }\n    }\n  }\n"]))),ct=(0,W.ZP)(Xe||(Xe=(0,B.Z)(["\n  query {\n    getAllPosts {\n      picture\n      _id\n      description\n      createdAt\n      likes {\n        _id\n      }\n      author {\n        _id\n        username\n        avatar\n      }\n      comments {\n        _id\n        content\n        author {\n          _id\n          avatar\n          username\n        }\n      }\n    }\n  }\n"]))),pt=(0,W.ZP)(Ye||(Ye=(0,B.Z)(["\n  query GetPostComments($input: ID!) {\n    getPostComments(input: $input) {\n      _id\n      content\n      author {\n        _id\n        username\n        avatar\n      }\n      parentPost {\n        _id\n      }\n      createdAt\n      likes {\n        _id\n      }\n    }\n  }\n"]))),st=(0,W.ZP)(et||(et=(0,B.Z)(["\n  query GetPost($input: ID!) {\n    getPost(input: $input) {\n      _id\n      picture\n      createdAt\n      likes {\n        _id\n      }\n      description\n      author {\n        _id\n        username\n        avatar\n      }\n      comments {\n        _id\n        content\n        createdAt\n        author {\n          username\n          avatar\n        }\n      }\n    }\n  }\n"]))),ut=n(13356),dt=n(98690),mt=n.n(dt),ft=n(47480);function gt(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function ht(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?gt(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):gt(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function xt(){var e=(0,j.useState)(!1),t=(0,U.Z)(e,2),n=t[0],r=(t[1],(0,j.useState)(!1)),o=(0,U.Z)(r,2),i=o[0],a=o[1],l=(0,z.UO)().id,c=(0,rt.a)(it),p=c.data,s=(c.loading,c.error,(0,rt.a)(lt,{variables:{input:l}})),u=s.data,d=s.loading,m=(s.error,(0,F.D)(G,{update:function(e,t){var n=t.data.changeAvatar;console.log({changeAvatar:n});e.readQuery({query:it});e.writeQuery({query:it,data:{data:n}})}})),f=(0,U.Z)(m,2),g=f[0],h=f[1].loading,x=(0,j.useCallback)(function(){var e=(0,A.Z)(M().mark((function e(t){var n,r,o;return M().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n=(0,U.Z)(t,1),r=n[0],o=new(mt().S3.ManagedUpload)({params:{Bucket:"latergram",Key:"".concat((0,ft.x0)()).concat(r.name),Body:r}}),o.promise().then((function(e){g({variables:{input:e.Location}}),a(!1)}));case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),[]),b=(0,F.D)(Q,{update:function(e,t){var n=t.data.followUser,r=e.readQuery({query:it});console.log(r),console.log(n),e.writeQuery({query:it,data:{data:ht(ht({},r.data),{},{following:[n].concat((0,ot.Z)(r.data.following))})}})}}),v=(0,U.Z)(b,2),w=v[0],y=v[1],E=(y.error,y.loading,(0,F.D)(H,{update:function(e,t){var n=t.data.followUser,r=e.readQuery({query:it});console.log(r),console.log(n),e.writeQuery({query:it,data:{data:ht(ht({},r.data),{},{following:[r.data.following.filter((function(e){return e===_._id}))]})}})}})),P=(0,U.Z)(E,2),_=P[0],k=P[1],Z=k.error,I=(k.loading,(0,ut.uI)({onDrop:x})),C=I.getRootProps,O=I.getInputProps;I.isDragActive;if(Z)return"Loading...";if(d)return j.createElement(Y,null);var S=u.data,N=S.followers,D=S.following,q=S.username,L=S.posts,B=S._id,W=S.avatar;return j.createElement(j.Fragment,null,j.createElement(bt,null,j.createElement(vt,null,j.createElement("div",null,i&&j.createElement(Et,null,j.createElement("div",C(),j.createElement("input",O()),j.createElement("button",null,"Upload picture"))),j.createElement("img",{src:"".concat(W),width:"150",height:"150"}),h?j.createElement(Y,null):null),j.createElement("div",null,j.createElement("div",null,j.createElement("p",null,q&&q),p&&p.data._id!==B?j.createElement("div",null,p.data.following.find((function(e){var t=e._id;return B===t}))?j.createElement(yt,{isFollowing:n,onClick:function(){_({variables:{input:B}})}},"Following"):j.createElement(wt,{isFollowing:n,onClick:function(){var e;console.log({newId:B}),e=B,console.log({thisID:e}),w({variables:{input:e}})}},"Follow")):j.createElement("button",{onClick:function(){return a(!i)}},j.createElement("svg",{fill:"#fff",height:"24",viewBox:"0 0 48 48",width:"24"},j.createElement("path",{clipRule:"evenodd",d:"M46.7 20.6l-2.1-1.1c-.4-.2-.7-.5-.8-1-.5-1.6-1.1-3.2-1.9-4.7-.2-.4-.3-.8-.1-1.2l.8-2.3c.2-.5 0-1.1-.4-1.5l-2.9-2.9c-.4-.4-1-.5-1.5-.4l-2.3.8c-.4.1-.8.1-1.2-.1-1.4-.8-3-1.5-4.6-1.9-.4-.1-.8-.4-1-.8l-1.1-2.2c-.3-.5-.8-.8-1.3-.8h-4.1c-.6 0-1.1.3-1.3.8l-1.1 2.2c-.2.4-.5.7-1 .8-1.6.5-3.2 1.1-4.6 1.9-.4.2-.8.3-1.2.1l-2.3-.8c-.5-.2-1.1 0-1.5.4L5.9 8.8c-.4.4-.5 1-.4 1.5l.8 2.3c.1.4.1.8-.1 1.2-.8 1.5-1.5 3-1.9 4.7-.1.4-.4.8-.8 1l-2.1 1.1c-.5.3-.8.8-.8 1.3V26c0 .6.3 1.1.8 1.3l2.1 1.1c.4.2.7.5.8 1 .5 1.6 1.1 3.2 1.9 4.7.2.4.3.8.1 1.2l-.8 2.3c-.2.5 0 1.1.4 1.5L8.8 42c.4.4 1 .5 1.5.4l2.3-.8c.4-.1.8-.1 1.2.1 1.4.8 3 1.5 4.6 1.9.4.1.8.4 1 .8l1.1 2.2c.3.5.8.8 1.3.8h4.1c.6 0 1.1-.3 1.3-.8l1.1-2.2c.2-.4.5-.7 1-.8 1.6-.5 3.2-1.1 4.6-1.9.4-.2.8-.3 1.2-.1l2.3.8c.5.2 1.1 0 1.5-.4l2.9-2.9c.4-.4.5-1 .4-1.5l-.8-2.3c-.1-.4-.1-.8.1-1.2.8-1.5 1.5-3 1.9-4.7.1-.4.4-.8.8-1l2.1-1.1c.5-.3.8-.8.8-1.3v-4.1c.4-.5.1-1.1-.4-1.3zM24 41.5c-9.7 0-17.5-7.8-17.5-17.5S14.3 6.5 24 6.5 41.5 14.3 41.5 24 33.7 41.5 24 41.5z",fillRule:"evenodd"})))),j.createElement("div",null,j.createElement("span",null,j.createElement("strong",null,L&&L.length)," post"),j.createElement("span",null,j.createElement("strong",null,N&&N.length)," followers"),j.createElement("span",null,j.createElement("strong",null,D&&D.length)," following"))))))}mt().config.update({region:"eu-central-1",credentials:new(mt().CognitoIdentityCredentials)({IdentityPoolId:"eu-central-1:df1bc5d5-1bee-4dab-b02f-283bf46d2db9"})});var bt=D.ZP.div.withConfig({displayName:"Details__MainContainer",componentId:"sc-e9buos-0"})(["width:100%;position:relative;background-color:#18191a;display:flex;align-items:center;flex-direction:column;"]),vt=D.ZP.div.withConfig({displayName:"Details__RowOne",componentId:"sc-e9buos-1"})(["padding:30px 20px;display:flex;align-items:center;border-bottom:1px solid #dbdbdb;max-width:975px;justify-content:space-between;width:100%;padding-left:50px;padding-bottom:50px;& > div:nth-of-type(1){margin-right:100px;position:relative;img{border-radius:50%;object-fit:cover;}}& > div:nth-of-type(2){display:flex;flex-direction:column;justify-content:center;align-items:center;flex-grow:4;color:#e5e7ec;& > div:nth-of-type(1){width:100%;display:flex;p{font-size:28px;}button:nth-of-type(1){cursor:pointer;margin-left:20px;margin-right:15px;background-color:",";padding:3px 9px;border-radius:5px;font-weight:600;font-size:14px;letter-spacing:0.2px;}button:nth-of-type(2){border:none;}}& > div:nth-of-type(2){margin-top:30px;display:flex;width:100%;span:nth-of-type(2){margin-left:20px;margin-right:20px;}}}"],(function(e){return e.theme.colors.buttonPrimary})),wt=D.ZP.button.withConfig({displayName:"Details__FollowButton",componentId:"sc-e9buos-2"})(["background-color:#0095f6;color:white;",""],(function(e){return e.isFollowing&&"display:none"})),yt=D.ZP.button.withConfig({displayName:"Details__UnfollowButton",componentId:"sc-e9buos-3"})(["background-color:#fafafa;",""],(function(e){return e.isFollowing&&"display:block"})),Et=D.ZP.div.withConfig({displayName:"Details__UploadButton",componentId:"sc-e9buos-4"})(["position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);button{background-color:#18191a;border-radius:10px;border:0;color:white;padding:5px 10px;cursor:pointer;}"]);function Pt(e){var t=e.id,n=(0,rt.a)(lt,{variables:{input:t}}),r=n.data,o=n.loading;if(n.error)return j.createElement("div",null,"error");if(o)return j.createElement(Y,null);var i=r.data.posts;return j.createElement(_t,null,j.createElement(kt,null,i&&i.map((function(e){return j.createElement("img",{key:e._id,src:"".concat(e.picture),alt:e._id})}))))}var _t=D.ZP.section.withConfig({displayName:"Posts__Wrapper",componentId:"sc-rnmb7g-0"})(["padding:25px 0px;width:100%;color:#e5e7ec;background-color:#18191a;max-width:955px;"]),kt=D.ZP.div.withConfig({displayName:"Posts__ImagesGrid",componentId:"sc-rnmb7g-1"})(["display:grid;grid-template-columns:repeat(auto-fit,minmax(280px,300px));width:100%;grid-gap:20px;img{width:100%;max-height:100%;object-fit:cover;}"]);function Zt(e){(0,q.Z)(e);var t=(0,z.UO)().id,n=(0,rt.a)(lt,{variables:{input:t}}),r=n.data,o=n.loading,i=n.error;return j.createElement(j.Fragment,null,j.createElement(It,null,j.createElement(xt,{data:r,error:i,loading:o}),j.createElement(Ct,null,j.createElement("span",null,j.createElement("svg",{fill:"white",height:"12",viewBox:"0 0 48 48",width:"12"},j.createElement("path",{clipRule:"evenodd",d:"M45 1.5H3c-.8 0-1.5.7-1.5 1.5v42c0 .8.7 1.5 1.5 1.5h42c.8 0 1.5-.7 1.5-1.5V3c0-.8-.7-1.5-1.5-1.5zm-40.5 3h11v11h-11v-11zm0 14h11v11h-11v-11zm11 25h-11v-11h11v11zm14 0h-11v-11h11v11zm0-14h-11v-11h11v11zm0-14h-11v-11h11v11zm14 28h-11v-11h11v11zm0-14h-11v-11h11v11zm0-14h-11v-11h11v11z",fillRule:"evenodd"})),j.createElement("span",null,"POSTS"))),j.createElement(Pt,{id:t})))}var It=D.ZP.section.withConfig({displayName:"Profile__Wrapper",componentId:"sc-1qquobp-0"})(["width:100%;position:relative;display:flex;align-items:center;flex-direction:column;min-height:100vh;background-color:#18191a;"]),Ct=D.ZP.div.withConfig({displayName:"Profile__Breakpoint",componentId:"sc-1qquobp-1"})(['width:100%;display:flex;margin-bottom:20px;justify-content:center;color:white;span{position:relative;span{letter-spacing:2px;font-size:14px;margin-left:5px;}}& > span:nth-of-type(1):after{content:"";width:70px;top:-1px;height:1px;color:black;display:block;position:absolute;background-color:black;}']);D.ZP.div.withConfig({displayName:"Story__Wrapper",componentId:"sc-3rrgvr-0"})(["width:100%;position:relative;display:flex;flex-shrink:0;background-color:#242526;height:120px;margin-bottom:25px;"]),D.ZP.div.withConfig({displayName:"Story__InsideWrapper",componentId:"sc-3rrgvr-1"})(["border:1px solid #242526;border-radius:3px;width:100%;display:flex;overflow-x:hidden;position:relative;"]),D.ZP.div.withConfig({displayName:"Story__Slider",componentId:"sc-3rrgvr-2"})(["width:100%;display:flex;position:absolute;div{display:flex;flex-direction:column;align-items:center;margin:15px 0px 15px 15px;img{border-radius:50%;width:65px;height:65px;}span{line-height:18px;font-size:14px;font-weight:bold;}}"]);var Ot=D.ZP.div.withConfig({displayName:"Story__ArrowButton",componentId:"sc-3rrgvr-3"})(["position:absolute;width:20px;height:20px;border-radius:50%;background-color:#ffffff;border:none;cursor:pointer;svg{width:20px;height:20px;color:black;}"]);(0,D.ZP)(Ot).withConfig({displayName:"Story__LeftArrow",componentId:"sc-3rrgvr-4"})(["left:0px;top:25px;"]),(0,D.ZP)(Ot).withConfig({displayName:"Story__RightArrow",componentId:"sc-3rrgvr-5"})(["right:5px;top:25px;"]);function jt(e){return(0,q.Z)(e),j.createElement(St,null,j.createElement("p",null,"Made by Octavian David"),j.createElement("a",{href:"http://github.com/octaviandd"},j.createElement(X.hJX,null)))}var St=D.ZP.div.withConfig({displayName:"Watermark__Wrapper",componentId:"sc-16h432d-0"})(["background:#242526;display:flex;margin-top:3rem;flex-direction:column;align-items:center;padding:10px 15px;border-radius:10px;width:100%;p{text-align:center;color:#e5e7ec;font-weight:700;}a{margin-top:1rem;color:#e5e7ec;font-size:20px;svg{height:25px;width:25px;}}"]);function Nt(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function zt(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Nt(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Nt(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Dt(e){var t=e.user,n=(0,j.useState)(!1),r=(0,U.Z)(n,2),o=r[0],i=r[1],a=(0,F.D)(Q,{update:function(e,t){var n=t.data.followUser,r=e.readQuery({query:it});console.log(r),console.log(n),e.writeQuery({query:it,data:{data:zt(zt({},r.data),{},{following:[n].concat((0,ot.Z)(r.data.following))})}})}}),l=(0,U.Z)(a,2),c=l[0],p=l[1],s=p.error,u=p.loading;return u?j.createElement(Y,null):s?j.createElement("div",null,"error"):j.createElement(At,null,j.createElement("div",null,j.createElement("div",null,j.createElement(N.rU,{to:"/profile/".concat(t._id)},j.createElement("img",{src:t.avatar,alt:"".concat(t.username," avatar")})),j.createElement(N.rU,{to:"/profile/".concat(t._id)},t.username)),j.createElement("button",{onClick:function(){return i(!0),void c({variables:{input:t._id}})}},o?"Following":"Follow")))}var At=D.ZP.div.withConfig({displayName:"Friend__Wrapper",componentId:"sc-1ig0al6-0"})(["display:flex;div{button{position:relative;border:none;font-weight:bold;font-size:12px;cursor:pointer;padding:5px;border-radius:5px;background-color:",";color:#fff;}div{a{text-decoration:none;font-size:14px;line-height:18px;font-size:14px;font-weight:bold;color:",";img{width:30px;height:30px;border-radius:50%;object-fit:cover;}}img{margin-right:7.5px;}}}"],(function(e){return e.theme.colors.buttonPrimary}),(function(e){return e.theme.colors.textDefault}));function Ut(e){(0,q.Z)(e);var t=(0,rt.a)(it),n=t.data,r=t.error,o=t.loading,i=(0,rt.a)(at).data;if(r)return j.createElement("div",null,"error");if(o)return j.createElement(Y,null);var a=n.data,l=a._id,c=a.username,p=a.following,s=a.avatar;return j.createElement(qt,null,j.createElement(Lt,null,j.createElement(N.rU,{to:"/profile/".concat(l)},j.createElement("img",{src:"".concat(s)})),j.createElement(N.rU,{to:"/profile/".concat(l)},j.createElement("span",null,"".concat(c)))),j.createElement(Mt,null,j.createElement("div",null,j.createElement("p",null,"Suggestions For You"),j.createElement("a",{href:"#"},"See all")),i&&i.getUsers.filter((function(e){return e._id!==l&&!p.find((function(t){var n=t._id;return e._id===n}))})).slice(0,5).map((function(e){return j.createElement(Dt,{user:e,key:e._id})}))),j.createElement(jt,null))}var qt=D.ZP.div.withConfig({displayName:"Friends__Wrapper",componentId:"sc-1o9m120-0"})(["background-color:inherit;display:flex;flex-direction:column;align-items:center;position:fixed;width:293px;color:",";box-shadow:0 10px 15px -3px rgb(0 0 0 / 0.1),0 4px 6px -4px rgb(0 0 0 / 0.1);border-radius:10px;padding:10px;"],(function(e){return e.theme.colors.textDefault})),Lt=D.ZP.div.withConfig({displayName:"Friends__Profile",componentId:"sc-1o9m120-1"})(["display:flex;align-items:center;width:100%;margin-bottom:1rem;padding-top:2rem;img{margin-right:30px;width:50px;height:50px;border-radius:50%;object-fit:cover;}a{text-decoration:none;font-weight:bold;color:",";}"],(function(e){return e.theme.colors.textDefault})),Mt=D.ZP.div.withConfig({displayName:"Friends__Suggestions",componentId:"sc-1o9m120-2"})(["display:flex;width:100%;flex-direction:column;div{display:flex;align-items:center;width:100%;margin-top:3.5px;margin-bottom:3.5px;}& > div:nth-of-type(1){display:flex;justify-content:space-between;p{font-size:14px;line-height:18px;font-weight:bold;}a{font-size:14px;line-height:18px;text-decoration:none;font-weight:bold;color:",";}}"],(function(e){return e.theme.colors.textDefault}));function Ft(e){return(0,q.Z)(e),j.createElement(Bt,null,j.createElement("span",null),j.createElement("span",null),j.createElement("span",null))}var Bt=D.ZP.div.withConfig({displayName:"EditDots__Wrapper",componentId:"sc-brsxyh-0"})(["position:relative;cursor:pointer;width:20px;height:20px;display:flex;justify-content:space-around;& > span:nth-of-type(1){width:3px;height:3px;background-color:#e5e7ec;display:block;border-radius:50%;}& > span:nth-of-type(2){width:3px;height:3px;background-color:#e5e7ec;display:block;border-radius:50%;}& > span:nth-of-type(3){width:3px;height:3px;background-color:#e5e7ec;display:block;border-radius:50%;}"]);function Wt(e){return(0,q.Z)(e),j.createElement("svg",{"aria-label":"Comment",color:"#8e8e8e",fill:"#8e8e8e",height:"24",viewBox:"0 0 24 24",width:"24"},j.createElement("path",{d:"M20.656 17.008a9.993 9.993 0 10-3.59 3.615L22 22z",fill:"none",stroke:"currentColor",strokeLinejoin:"round",strokeWidth:"2"}))}function Vt(e){return(0,q.Z)(e),j.createElement("svg",{ariaLabel:"Unlike",class:"_8-yf5 ",color:"#ed4956",fill:"#ed4956",height:"24",viewBox:"0 0 48 48",width:"24"},j.createElement("path",{d:"M34.6 3.1c-4.5 0-7.9 1.8-10.6 5.6-2.7-3.7-6.1-5.5-10.6-5.5C6 3.1 0 9.6 0 17.6c0 7.3 5.4 12 10.6 16.5.6.5 1.3 1.1 1.9 1.7l2.3 2c4.4 3.9 6.6 5.9 7.6 6.5.5.3 1.1.5 1.6.5s1.1-.2 1.6-.5c1-.6 2.8-2.2 7.8-6.8l2-1.8c.7-.6 1.3-1.2 2-1.7C42.7 29.6 48 25 48 17.6c0-8-6-14.5-13.4-14.5z"}))}function Rt(e){return(0,q.Z)(e),j.createElement("svg",{"aria-label":"Like",color:"#8e8e8e",fill:"#8e8e8e",height:"24",viewBox:"0 0 24 24",width:"24"},j.createElement("path",{d:"M16.792 3.904A4.989 4.989 0 0121.5 9.122c0 3.072-2.652 4.959-5.197 7.222-2.512 2.243-3.865 3.469-4.303 3.752-.477-.309-2.143-1.823-4.303-3.752C5.141 14.072 2.5 12.167 2.5 9.122a4.989 4.989 0 014.708-5.218 4.21 4.21 0 013.675 1.941c.84 1.175.98 1.763 1.12 1.763s.278-.588 1.11-1.766a4.17 4.17 0 013.679-1.938m0-2a6.04 6.04 0 00-4.797 2.127 6.052 6.052 0 00-4.787-2.127A6.985 6.985 0 00.5 9.122c0 3.61 2.55 5.827 5.015 7.97.283.246.569.494.853.747l1.027.918a44.998 44.998 0 003.518 3.018 2 2 0 002.174 0 45.263 45.263 0 003.626-3.115l.922-.824c.293-.26.59-.519.885-.774 2.334-2.025 4.98-4.32 4.98-7.94a6.985 6.985 0 00-6.708-7.218z"}))}var $t=n(44586),Gt=function(e,t){var n=6e4,r=36e5,o=864e5,i=2592e6,a=31536e6,l=e-t;return l<n?Math.round(l/1e3)+" seconds ago":l<r?Math.round(l/n)+" minutes ago":l<o?Math.round(l/r)+" hours ago":l<i?"approximately "+Math.round(l/o)+" days ago":l<a?"approximately "+Math.round(l/i)+" months ago":"approximately "+Math.round(l/a)+" years ago"};function Tt(e){var t=e.comment;Gt(Date.now(),Number(t.createdAt));return j.createElement(Qt,null,j.createElement(Ht,null,j.createElement("img",{src:t.author.avatar})),j.createElement(Kt,null,j.createElement("div",null,j.createElement(N.rU,{to:"/profile/".concat(t.author._id)},j.createElement("span",null,t.author.username)),j.createElement("span",{style:{color:"#363636"}},t.content))))}var Qt=D.ZP.div.withConfig({displayName:"Comment__Wrapper",componentId:"sc-15sl4kw-0"})(["display:flex;align-items:center;padding:5px 15px;color:",";"],(function(e){return e.theme.colors.textDefault})),Ht=D.ZP.div.withConfig({displayName:"Comment__CommentLogo",componentId:"sc-15sl4kw-1"})(["margin-right:10px;img{width:32px;height:32px;border-radius:50%;object-fit:cover;}"]),Kt=D.ZP.div.withConfig({displayName:"Comment__CommentSection",componentId:"sc-15sl4kw-2"})(["display:flex;flex-direction:column;a{text-decoration:none;font-weight:600;margin-right:4px;word-wrap:break-word;}span{word-wrap:break-word;}"]);D.ZP.time.withConfig({displayName:"Comment__Timer",componentId:"sc-15sl4kw-3"})(["font-size:10px;letter-spacing:0.2px;line-height:18px;text-transform:uppercase;margin-bottom:4px;color:",";"],(function(e){return e.theme.colors.textDefault}));function Jt(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Xt(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Jt(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Jt(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Yt(e){var t=e.id,n=e.username,r=e.author,o=e.description,i=e.createdAt,a=(0,j.useState)({inputValue:"",isInputActive:!1}),l=(0,U.Z)(a,2),c=l[0],p=l[1],s=(0,rt.a)(pt,{variables:{input:t}}),u=s.data,d=(s.loading,s.error,(0,F.D)(T,{update:function(e,n){var r=n.data.createComment,o=e.readQuery({query:pt,variables:{input:t}});e.writeQuery({query:pt,variables:{input:t},data:Xt(Xt({},o),{},{getPostComments:[r].concat((0,ot.Z)(o.getPostComments))})})}})),m=(0,U.Z)(d,1)[0];(0,j.useEffect)((function(){""!==c.inputValue?p((function(e){return Xt(Xt({},e),{},{isInputActive:!0})})):p((function(e){return Xt(Xt({},e),{},{isInputActive:!1})}))}),[c.inputValue]);var f=Gt(Date.now(),Number(i));return j.createElement(en,null,j.createElement("div",null,j.createElement("div",{style:{paddingLeft:"14px"}},n&&j.createElement(N.rU,{to:"/profile/".concat(r)},n),j.createElement("span",null,o&&o)),u&&u.getPostComments.map((function(e){return j.createElement(Tt,{comment:e,key:(0,$t.Z)()})})),j.createElement(rn,null,f&&f),j.createElement(tn,null,j.createElement("form",{onSubmit:function(e){var n;e.preventDefault(),n=e.target[0].value,m({variables:{input:{content:n,_id:t}}}),p((function(e){return Xt(Xt({},e),{},{inputValue:""})}))}},j.createElement("input",{type:"text",name:"content",value:c.inputValue,onChange:function(e){return p((function(t){return Xt(Xt({},t),{},{inputValue:e.target.value})}))}}),j.createElement(nn,{active:c.isInputActive},"Add a comment.."),j.createElement(on,{type:"submit",disabled:""===c.inputValue},"Post")))))}var en=D.ZP.div.withConfig({displayName:"PostComments__Wrapper",componentId:"sc-yppwtg-0"})(["width:100%;display:flex;flex-direction:column;padding-top:10px;& > div:nth-of-type(1){display:flex;flex-direction:column;font-size:14px;line-height:18px;color:",";a{font-weight:800;text-decoration:none;color:",";margin-right:6px;}}"],(function(e){return e.theme.colors.textDefault}),(function(e){return e.theme.colors.textDefault})),tn=D.ZP.div.withConfig({displayName:"PostComments__AddCommentsContainer",componentId:"sc-yppwtg-1"})(["position:relative;display:flex;justify-content:space-between;border-top:1px solid #dbdbdb;width:100%;form{height:50px;width:100%;display:flex;justify-content:space-between;}span{padding:15px 10px;color:",";}input{border:none;padding:15px 10px;font-size:14px;background-color:inherit;color:",";&:focus{outline:none;}}"],(function(e){return e.theme.colors.textDefault}),(function(e){return e.theme.colors.textDefault})),nn=D.ZP.span.withConfig({displayName:"PostComments__WriteCommentSpan",componentId:"sc-yppwtg-2"})(["position:absolute;color:",";font-size:14px;line-height:18px;pointer-events:none;",""],(function(e){return e.theme.colors.textDefault}),(function(e){return e.active&&"\n        display: none;\n      "})),rn=D.ZP.time.withConfig({displayName:"PostComments__Timer",componentId:"sc-yppwtg-3"})(["padding:10px;font-size:10px;letter-spacing:0.2px;line-height:18px;text-transform:uppercase;margin-bottom:4px;color:",";"],(function(e){return e.theme.colors.textDefault})),on=D.ZP.button.withConfig({displayName:"PostComments__SubmitButton",componentId:"sc-yppwtg-4"})(["font-size:16px;color:#838384;background:#3a3b3c;height:100%;color:#fff;border:none;font-weight:600;cursor:pointer;padding:0px 10px;",""],(function(e){return!e.disabled&&"background: #4395FD;color: #e5e7ec;"}));function an(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function ln(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?an(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):an(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function cn(e){var t=e.post,n=(0,j.useState)(0),r=(0,U.Z)(n,2),o=r[0],i=r[1],a=(0,rt.a)(it),l=a.data,c=(a.loading,a.error,(0,F.D)(K,{update:function(e,t){var n=t.data.likePost,r=e.readQuery({query:it});e.writeQuery({query:it,data:{data:ln(ln({},r.data),{},{likedPosts:r.data.likedPosts.concat(n)})}})},onCompleted:function(e){i(e.likePost.likes.length)}})),p=(0,U.Z)(c,2),s=p[0],u=p[1],d=(u.error,u.loading,(0,F.D)(J,{update:function(e,t){var n=t.data.unlikePost,r=e.readQuery({query:it});console.log(n),e.writeQuery({query:it,data:{data:ln(ln({},r.data),{},{likedPosts:[r.data.likedPosts.filter((function(e){return e===n._id}))]})}})},onCompleted:function(e){i(e.unlikePost.likes.length)}})),m=(0,U.Z)(d,2),f=m[0],g=m[1],h=(g.error,g.loading,function(){var e=(0,A.Z)(M().mark((function e(){return M().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,s({variables:{input:t._id}});case 2:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}()),x=function(){var e=(0,A.Z)(M().mark((function e(){return M().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,f({variables:{input:t._id}});case 2:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}();return j.createElement(pn,null,j.createElement(sn,null,j.createElement("div",null,j.createElement(N.rU,{to:"profile/".concat(t&&t.author._id)},j.createElement("img",{src:t&&t.author.avatar,width:"40",height:"40"}),j.createElement("span",null,t&&t.author.username))),j.createElement(Ft,null)),j.createElement(un,null,j.createElement("img",{src:t&&t.picture})),j.createElement(dn,null,j.createElement(mn,null,j.createElement("div",null,l&&l.data.likedPosts.some((function(e){return e._id===t._id}))?j.createElement(gn,{onClick:function(){return x()}},j.createElement(Vt,null)):j.createElement(hn,{onClick:function(){return h()}},j.createElement(Rt,null)),j.createElement(N.rU,{to:"post/".concat(t&&t._id)},j.createElement("button",null,j.createElement(Wt,null))))),j.createElement(fn,null,j.createElement("a",{href:""},!o&&t&&t.likes.length>0?j.createElement("span",null,1===t.likes.length?"".concat(t.likes.length," like"):"".concat(t.likes.length," likes")):j.createElement("span",null,"".concat(o,1===o?" like":" likes")))),j.createElement(Yt,{postComments:t&&t.comments,id:t&&t._id,username:t&&t.author.username,author:t&&t.author._id,description:t&&t.description,createdAt:t&&t.createdAt})))}var pn=D.ZP.div.withConfig({displayName:"Post__Wrapper",componentId:"sc-5535x9-0"})(["display:flex;flex-direction:column;align-items:center;width:100%;margin-top:30px;border-radius:6px;position:relative;border:none;-webkit-box-shadow:0 19px 38px rgba(0,0,0,0.3),0 15px 12px rgba(0,0,0,0.22);-moz-box-shadow:0 19px 38px rgba(0,0,0,0.3),0 15px 12px rgba(0,0,0,0.22);box-shadow:0px 3px 15px rgba(0,0,0,0.2);"]),sn=D.ZP.div.withConfig({displayName:"Post__UserDetails",componentId:"sc-5535x9-1"})(["height:60px;width:100%;display:flex;align-items:center;justify-content:space-between;padding-left:15px;padding-right:15px;position:relative;& > div{display:flex;align-items:center;position:relative;height:60px;a{line-height:60px;display:flex;font-size:0;height:60px;align-items:center;text-decoration:none;font-weight:600;color:#262626;img{margin-right:15px;border-radius:50%;object-fit:cover;}span{line-height:60px;font-size:14px;font-weight:800;}}}"]),un=D.ZP.div.withConfig({displayName:"Post__PostImage",componentId:"sc-5535x9-2"})(["display:flex;width:100%;min-height:500px;img{width:100%;object-fit:cover;}"]),dn=D.ZP.div.withConfig({displayName:"Post__PostOptions",componentId:"sc-5535x9-3"})(["display:flex;flex-direction:column;align-items:center;width:100%;padding-top:5px;position:relative;color:",";"],(function(e){return e.theme.colors.textDefault})),mn=D.ZP.div.withConfig({displayName:"Post__ButtonsContainer",componentId:"sc-5535x9-4"})(["padding-left:10px;padding-top:5px;padding-right:10px;width:100%;display:flex;justify-content:space-between;div{display:flex;justify-content:space-around;button{width:40px;height:40px;cursor:pointer;background-color:inherit;border:none;}}"]),fn=D.ZP.div.withConfig({displayName:"Post__LikesContainer",componentId:"sc-5535x9-5"})(["display:flex;width:100%;margin-top:7.5px;padding-left:10px;a{font-size:14px;line-height:18px;font-weight:800;text-decoration:none;color:",";}"],(function(e){return e.theme.colors.textDefault})),gn=D.ZP.button.withConfig({displayName:"Post__LikedButton",componentId:"sc-5535x9-6"})([""]),hn=D.ZP.button.withConfig({displayName:"Post__NotLikedButton",componentId:"sc-5535x9-7"})([""]),xn=n(87462),bn=n(81872);function vn(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function wn(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?vn(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):vn(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function yn(e){(0,q.Z)(e);var t=(0,j.useState)({picture:"",isActive:!1,buttonStatus:!1,inputValue:""}),n=(0,U.Z)(t,2),r=n[0],o=n[1],i=(0,j.useCallback)(function(){var e=(0,A.Z)(M().mark((function e(t){var n,r,i;return M().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n=(0,U.Z)(t,1),r=n[0],i=new(mt().S3.ManagedUpload)({params:{Bucket:"latergram",Key:"".concat((0,ft.x0)()).concat(r.name),Body:r}}),i.promise().then((function(e){o((function(t){return wn(wn({},t),{},{picture:e.Location})}))}));case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),[]),a=(0,ut.uI)({onDrop:i}),l=a.getRootProps,c=a.getInputProps,p=(0,F.D)($,{update:function(e,t){var n=t.data.createPost,r=e.readQuery({query:ct});console.log({data:r},{createPost:n}),e.writeQuery({query:ct,data:{data:{getAllPosts:[n].concat((0,ot.Z)(r.getAllPosts))}}})}}),s=(0,U.Z)(p,1)[0],u=function(){var e=(0,A.Z)(M().mark((function e(t){return M().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,s({variables:{input:{description:t||"",picture:r.picture}}});case 2:o((function(e){return wn(wn({},e),{},{isActive:!r.isActive,picture:""})}));case 3:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}();return j.createElement(En,null,j.createElement(Pn,{hidden:r.isActive,onClick:function(){return o((function(e){return wn(wn({},e),{},{isActive:!r.isActive})}))}},j.createElement(X.EIY,null)),r.isActive&&j.createElement(_n,{onSubmit:function(e){e.preventDefault(),u(e.target[1].value)}},j.createElement(kn,null,j.createElement("h2",null,"Create Post"),j.createElement("span",{onClick:function(){o((function(e){return wn(wn({},e),{},{isActive:!r.isActive,picture:""})}))}},j.createElement(X.aHS,null))),j.createElement("div",null,j.createElement(Cn,(0,xn.Z)({},l(),{hidden:r.picture}),j.createElement("input",c()),j.createElement(In,null,j.createElement(bn.uZU,{id:"dropZone"}),j.createElement("span",null,"Photo"))),r.picture?j.createElement(jn,null,j.createElement(Sn,null,j.createElement(Nn,null,j.createElement(zn,{src:r.picture})))):null),j.createElement(Zn,null,j.createElement("input",{type:"text",name:"description",value:r.inputValue,onChange:function(e){return o((function(t){return wn(wn({},t),{},{inputValue:e.target.value})}))}}),j.createElement(On,{type:"submit",disabled:!r.picture},"Post"))))}mt().config.update({region:"eu-central-1",credentials:new(mt().CognitoIdentityCredentials)({IdentityPoolId:"eu-central-1:df1bc5d5-1bee-4dab-b02f-283bf46d2db9"})});var En=D.ZP.div.withConfig({displayName:"PostGenerator__Wrapper",componentId:"sc-a1gqt6-0"})(["display:flex;justify-content:center;margin-bottom:1rem;position:relative;align-items:center;position:relative;width:100%;"]),Pn=D.ZP.button.withConfig({displayName:"PostGenerator__OpenModalButton",componentId:"sc-a1gqt6-1"})(["color:",";border:none;cursor:pointer;background-color:transparent;svg{width:30px;height:30px;}"],(function(e){return e.theme.colors.buttonPrimary})),_n=D.ZP.form.withConfig({displayName:"PostGenerator__FormModal",componentId:"sc-a1gqt6-2"})(["padding:1rem 0;flex-direction:column;display:flex;align-items:center;background-color:#242526;display:flex;width:100%;z-index:99999;border-radius:10px;border:1px solid #242526;#dropZone{width:40px;height:40px;cursor:pointer;}"]),kn=D.ZP.div.withConfig({displayName:"PostGenerator__TopBar",componentId:"sc-a1gqt6-3"})(["display:grid;border-bottom:1px solid #e5e7ec;width:100%;position:relative;padding:1rem;h2{color:#e5e7ec;text-align:center;padding-bottom:1rem;}span{color:#e5e7ec;text-align:center;cursor:pointer;position:absolute;right:15px;top:20px;svg{width:18px;height:18px;fill:#e5e7ec;}}"]),Zn=D.ZP.div.withConfig({displayName:"PostGenerator__FormActions",componentId:"sc-a1gqt6-4"})(["width:100%;display:flex;flex-direction:column;align-items:center;padding:20px;input{padding:10px 5px;border-radius:20px;border:0;background-color:#18191a;color:#e5e7ec;width:100%;height:200px;font-size:30px;text-align:center;&:focus{outline:none;}::-webkit-input-placeholder{font-size:30px;text-align:center;}::-moz-placeholder{font-size:30px;text-align:center;}:-ms-input-placeholder{font-size:30px;text-align:center;}:-moz-placeholder{font-size:30px;text-align:center;}}"]),In=D.ZP.div.withConfig({displayName:"PostGenerator__PictureInput",componentId:"sc-a1gqt6-5"})(["display:flex;align-items:center;color:#838384;width:100%;padding:7.5px 12.5px;margin-top:25px;svg{padding-right:10px;}background-color:#3a3b3c;border-radius:10px;"]),Cn=D.ZP.div.withConfig({displayName:"PostGenerator__Dropzone",componentId:"sc-a1gqt6-6"})(["cursor:pointer;"]),On=D.ZP.button.withConfig({displayName:"PostGenerator__SubmitButton",componentId:"sc-a1gqt6-7"})(["cursor:pointer;color:#838384;background:#3a3b3c;border:0;padding:10px 17.5px;border-radius:10px;font-size:18px;width:90%;text-align:center;font-weight:bold;margin-top:2rem;line-height:18px;",""],(function(e){return!e.disabled&&"background: #4395FD;color: #e5e7ec;"})),jn=D.ZP.div.withConfig({displayName:"PostGenerator__ThumbsContainer",componentId:"sc-a1gqt6-8"})(["display:flex;margin-top:16px;"]),Sn=D.ZP.div.withConfig({displayName:"PostGenerator__Thumb",componentId:"sc-a1gqt6-9"})(["display:inline-flex;border-radius:2px;border:1px solid #eaeaea;margin-bottom:8px;margin-right:8px;width:100px;height:100px;padding:4px;box-sizing:border-box;"]),Nn=D.ZP.div.withConfig({displayName:"PostGenerator__ThumbInner",componentId:"sc-a1gqt6-10"})(["display:flex;min-width:0;overflow:hidden;"]),zn=D.ZP.img.withConfig({displayName:"PostGenerator__Img",componentId:"sc-a1gqt6-11"})(["display:block;width:100px;height:100px;"]),Dn=function(e,t){var n=e.createdAt.toUpperCase(),r=t.createdAt.toUpperCase(),o=0;return n>r?o=-1:n<r&&(o=1),o};function An(e){(0,q.Z)(e);var t=(0,rt.a)(ct),n=t.data,r=t.error,o=t.loading,i=(0,rt.a)(it).data;if(r)return j.createElement("div",null,"errror");if(o)return j.createElement(Y,null);var a=i.data,l=a.following,c=a._id,p=n.getAllPosts.slice();return p.sort(Dn),j.createElement(Un,null,j.createElement(yn,null),p&&p.filter((function(e){return l.find((function(t){var n=t._id;return e.author._id===n}))||e._id!==c})).map((function(e){return j.createElement(cn,{key:e._id,post:e&&e})})))}var Un=D.ZP.div.withConfig({displayName:"Feed__Wrapper",componentId:"sc-1q4b0n3-0"})(["display:flex;flex-direction:column;align-items:center;width:100%;margin-bottom:75px;"]);function qn(e){e.currentUser;return j.createElement(j.Fragment,null,j.createElement(Ln,null,j.createElement(Mn,null,j.createElement(An,null)),j.createElement(Fn,null,j.createElement(Ut,null))))}var Ln=D.ZP.div.withConfig({displayName:"Home__Wrapper",componentId:"sc-erlrsk-0"})(["display:flex;justify-content:center;background:",";padding-top:25px;min-height:100vh;width:100%;padding-left:20px;padding-right:20px;"],(function(e){return e.theme.colors.backgroundColor})),Mn=D.ZP.div.withConfig({displayName:"Home__LeftColumn",componentId:"sc-erlrsk-1"})(["position:relative;display:flex;max-width:614px;width:100%;margin-right:28px;height:100%;flex-direction:column;"]),Fn=D.ZP.div.withConfig({displayName:"Home__RightColumn",componentId:"sc-erlrsk-2"})(["max-width:293px;width:100%;"]);function Bn(e){var t=e.children,n=(0,rt.a)(it),r=n.data,o=n.error,i=n.loading;return o&&console.log(o),i?j.createElement(Y,null):r?j.createElement(j.Fragment,null,t):j.createElement(z.Fg,{to:"/login"})}function Wn(e){(0,q.Z)(e);var t=(0,rt.a)(ct),n=t.data,r=(t.error,t.loading);if(console.log(n),r)return j.createElement(Y,null);var o=n.getAllPosts.slice();return function(e){var t,n,r;for(r=e.length-1;r>0;r--)t=Math.floor(Math.random()*(r+1)),n=e[r],e[r]=e[t],e[t]=n}(o),j.createElement(j.Fragment,null,j.createElement(Vn,null,j.createElement(Rn,null,o.map((function(e){return j.createElement(Gn,{key:e._id},j.createElement(N.rU,{to:"/post/".concat(e._id)},j.createElement("img",{src:e.picture})),j.createElement($n,null,j.createElement("span",null,j.createElement(Vt,null),j.createElement("span",null,e.likes.length)),j.createElement("span",null,j.createElement(Rt,null),j.createElement("span",null,e.comments.length))))})))))}var Vn=D.ZP.div.withConfig({displayName:"Explore__MainContainer",componentId:"sc-zznn5b-0"})(["background-color:#18191a;width:100%;min-height:100vh;display:flex;justify-content:center;"]),Rn=D.ZP.div.withConfig({displayName:"Explore__Container",componentId:"sc-zznn5b-1"})(["max-width:975px;width:100%;display:grid;grid-template-columns:repeat(3,1fr);grid-auto-rows:1fr;justify-content:space-between;margin-top:25px;grid-gap:25px;"]),$n=D.ZP.div.withConfig({displayName:"Explore__PostDetails",componentId:"sc-zznn5b-2"})(["position:absolute;display:flex;justify-content:space-around;align-items:center;display:none;width:100%;top:50%;left:50%;transform:translate(-50%,-50%);text-align:center;& > span{}span{color:white;svg{fill:white;}}"]),Gn=D.ZP.div.withConfig({displayName:"Explore__Post",componentId:"sc-zznn5b-3"})(["flex:0 0 auto;position:relative;cursor:pointer;height:370px;img{object-fit:cover;height:100%;width:100%;}&:hover{","{display:block;}img{opacity:0.5;}}"],$n);function Tn(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Qn(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Tn(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Tn(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Hn(e){(0,q.Z)(e);var t=(0,z.UO)().id,n=(0,j.useState)({inputValue:"",isInputActive:!1}),r=(0,U.Z)(n,2),o=r[0],i=r[1];console.log(t);var a=(0,rt.a)(st,{variables:{input:t}}),l=a.data,c=a.loading;a.error;if((0,j.useEffect)((function(){""!==o.inputValue?i((function(e){return Qn(Qn({},e),{},{isInputActive:!0})})):i((function(e){return Qn(Qn({},e),{},{isInputActive:!1})}))}),[o.inputValue]),console.log(l),c)return j.createElement(Y,null);if(l){var p=Gt(Date.now(),Number(l.getPost.createdAt));return j.createElement(Jn,null,j.createElement(Kn,null,j.createElement(Xn,null,j.createElement("img",{src:"".concat(l.getPost.picture)})),j.createElement(Yn,null,j.createElement(er,null,j.createElement("img",{src:"".concat(l.getPost.author.avatar)}),j.createElement("p",null,l.getPost.author.username)),j.createElement(tr,null,j.createElement("div",null,j.createElement("div",null,j.createElement("img",{src:"".concat(l.getPost.author.avatar)})),j.createElement("div",null,j.createElement("div",null,j.createElement(N.rU,{to:"".concat(l.getPost.author._id)},l.getPost.author.username),j.createElement("span",null,l.getPost.description)),j.createElement("div",null,j.createElement(nr,null,p))))),j.createElement(rr,null,l.getPost.comments.map((function(e){return j.createElement(Tt,{comment:e,key:(0,$t.Z)()})}))))))}return j.createElement(Y,null)}var Kn=D.ZP.div.withConfig({displayName:"Post__PostModal",componentId:"sc-z2c9bf-0"})(["position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);display:flex;"]),Jn=D.ZP.div.withConfig({displayName:"Post__Wrapper",componentId:"sc-z2c9bf-1"})(["background-color:#18191a;height:100vh;"]),Xn=D.ZP.div.withConfig({displayName:"Post__LeftColumn",componentId:"sc-z2c9bf-2"})(["position:relative;img{top:0;left:0;height:600px;width:600px;object-fit:cover;}"]),Yn=D.ZP.div.withConfig({displayName:"Post__RightColumn",componentId:"sc-z2c9bf-3"})(["display:flex;flex-direction:column;height:600px;width:300px;background:#242526;"]),er=D.ZP.div.withConfig({displayName:"Post__UserProfile",componentId:"sc-z2c9bf-4"})(["display:flex;width:100%;border-bottom:1px solid #dbdbdb;padding:15px 15px;align-items:center;color:whitesmoke;img{width:32px;height:32px;margin-right:12.5px;margin-left:10px;border-radius:50%;}"]),tr=D.ZP.div.withConfig({displayName:"Post__PostDescription",componentId:"sc-z2c9bf-5"})(["display:flex;width:100%;padding:15px 15px;flex-direction:column;& > div:nth-of-type(1){align-items:center;display:flex;& > div:nth-of-type(1){margin-right:10px;img{width:32px;height:32px;border-radius:50%;}}& > div:nth-of-type(2){a{font-weight:600;word-wrap:break-word;margin-right:4px;text-decoration:none;color:whitesmoke;}span{word-wrap:break-word;color:whitesmoke;}}}& > div:nth-of-type(2){display:flex;flex-direction:column;align-items:flex-start;}"]),nr=D.ZP.time.withConfig({displayName:"Post__Timer",componentId:"sc-z2c9bf-6"})(["font-size:10px;letter-spacing:0.2px;line-height:18px;text-transform:uppercase;margin-bottom:4px;color:whitesmoke;"]),rr=D.ZP.div.withConfig({displayName:"Post__CommentsList",componentId:"sc-z2c9bf-7"})(["height:100%;display:flex;flex-direction:column;"]);function or(e){var t=e.value,n=e.handleInput,r=e.clearText,o=e.active;return j.createElement(j.Fragment,null,j.createElement(ir,null,j.createElement(pr,{type:"text",id:"search-input",value:t,onChange:function(e){return n(e)},active:o}),j.createElement(lr,null,j.createElement(X.U41,null)),j.createElement(cr,{active:o},"Search"),j.createElement(ar,{active:o,onClick:function(){return r()}},j.createElement(X.aHS,null))))}var ir=D.ZP.div.withConfig({displayName:"NavbarSearchBar__Wrapper",componentId:"sc-1fxfal9-0"})(["position:relative;"]),ar=D.ZP.span.withConfig({displayName:"NavbarSearchBar__SearchCloseButton",componentId:"sc-1fxfal9-1"})(["position:absolute;opacity:0;top:5px;right:10px;svg{background-color:#c7c7c7;border-radius:50%;fill:#f2f2f2;width:12px;height:12px;padding:1px 3px;}"]),lr=D.ZP.span.withConfig({displayName:"NavbarSearchBar__SearchIcon",componentId:"sc-1fxfal9-2"})(["position:absolute;left:76px;top:5px;line-height:20px;svg{width:12px;height:12px;}"]),cr=D.ZP.span.withConfig({displayName:"NavbarSearchBar__SearchPlaceholder",componentId:"sc-1fxfal9-3"})(["position:absolute;left:96px;top:4px;color:#8e8e8e;font-size:14px;line-height:20px;pointer-events:none;",""],(function(e){return e.active&&"\n        display: none;\n      "})),pr=D.ZP.input.withConfig({displayName:"NavbarSearchBar__SearchInput",componentId:"sc-1fxfal9-4"})(["position:relative;background-color:#fafafa;border:1px solid #dbdbdb;border-radius:3px;font-size:14px;padding-left:24px;padding-right:10px;padding-top:3px;padding-bottom:3px;line-height:20px;text-indent:70px;&:focus{text-indent:0px;}&:focus ~ ","{left:10px;}&:focus ~ ","{opacity:1;}&:focus ~ ","{left:25px;","}span{position:absolute;svg{fill:#c7c7c7;}}"],lr,ar,cr,(function(e){return e.active&&"\n        display: none;\n      "}));function sr(e){return(0,q.Z)(e),j.createElement("svg",{fill:"#fff",height:"22",viewBox:"0 0 48 48",width:"22"},j.createElement("path",{d:"M45.5 48H30.1c-.8 0-1.5-.7-1.5-1.5V34.2c0-2.6-2.1-4.6-4.6-4.6s-4.6 2.1-4.6 4.6v12.3c0 .8-.7 1.5-1.5 1.5H2.5c-.8 0-1.5-.7-1.5-1.5V23c0-.4.2-.8.4-1.1L22.9.4c.6-.6 1.6-.6 2.1 0l21.5 21.5c.3.3.4.7.4 1.1v23.5c.1.8-.6 1.5-1.4 1.5z"}))}function ur(e){return(0,q.Z)(e),j.createElement("svg",{fill:"#fff",height:"22",viewBox:"0 0 48 48",width:"22"},j.createElement("path",{clipRule:"evenodd",d:"M24 0C10.8 0 0 10.8 0 24s10.8 24 24 24 24-10.8 24-24S37.2 0 24 0zm0 45C12.4 45 3 35.6 3 24S12.4 3 24 3s21 9.4 21 21-9.4 21-21 21zm10.2-33.2l-14.8 7c-.3.1-.6.4-.7.7l-7 14.8c-.3.6-.2 1.3.3 1.7.3.3.7.4 1.1.4.2 0 .4 0 .6-.1l14.8-7c.3-.1.6-.4.7-.7l7-14.8c.3-.6.2-1.3-.3-1.7-.4-.5-1.1-.6-1.7-.3zm-7.4 15l-5.5-5.5 10.5-5-5 10.5z",fillRule:"evenodd"}))}function dr(e){return(0,q.Z)(e),j.createElement("svg",{"aria-label":"Profile",fill:"#262626",height:"16",viewBox:"0 0 32 32",width:"16"},j.createElement("path",{d:"M16 0C7.2 0 0 7.1 0 16c0 4.8 2.1 9.1 5.5 12l.3.3C8.5 30.6 12.1 32 16 32s7.5-1.4 10.2-3.7l.3-.3c3.4-3 5.5-7.2 5.5-12 0-8.9-7.2-16-16-16zm0 29c-2.8 0-5.3-.9-7.5-2.4.5-.9.9-1.3 1.4-1.8.7-.5 1.5-.8 2.4-.8h7.2c.9 0 1.7.3 2.4.8.5.4.9.8 1.4 1.8-2 1.5-4.5 2.4-7.3 2.4zm9.7-4.4c-.5-.9-1.1-1.5-1.9-2.1-1.2-.9-2.7-1.4-4.2-1.4h-7.2c-1.5 0-3 .5-4.2 1.4-.8.6-1.4 1.2-1.9 2.1C4.2 22.3 3 19.3 3 16 3 8.8 8.8 3 16 3s13 5.8 13 13c0 3.3-1.2 6.3-3.3 8.6zM16 5.7c-3.9 0-7 3.1-7 7s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7zm0 11c-2.2 0-4-1.8-4-4s1.8-4 4-4 4 1.8 4 4-1.8 4-4 4z"}))}function mr(e){return(0,q.Z)(e),j.createElement("svg",{"aria-label":"Settings",fill:"#4395FD",height:"16",viewBox:"0 0 32 32",width:"16"},j.createElement("path",{d:"M31.2 13.4l-1.4-.7c-.1 0-.2-.1-.2-.2v-.2c-.3-1.1-.7-2.1-1.3-3.1v-.1l-.2-.1v-.3l.5-1.5c.2-.5 0-1.1-.4-1.5l-1.9-1.9c-.4-.4-1-.5-1.5-.4l-1.5.5H23l-.1-.1h-.1c-1-.5-2-1-3.1-1.3h-.2c-.1 0-.1-.1-.2-.2L18.6.9c-.2-.5-.7-.9-1.2-.9h-2.7c-.5 0-1 .3-1.3.8l-.7 1.4c0 .1-.1.2-.2.2h-.2c-1.1.3-2.1.7-3.1 1.3h-.1l-.1.2h-.3l-1.5-.5c-.5-.2-1.1 0-1.5.4L3.8 5.7c-.4.4-.5 1-.4 1.5l.5 1.5v.5c-.5 1-1 2-1.3 3.1v.2c0 .1-.1.1-.2.2l-1.4.7c-.6.2-1 .7-1 1.2v2.7c0 .5.3 1 .8 1.3l1.4.7c.1 0 .2.1.2.2v.2c.3 1.1.7 2.1 1.3 3.1v.1l.2.1v.3l-.5 1.5c-.2.5 0 1.1.4 1.5l1.9 1.9c.3.3.6.4 1 .4.2 0 .3 0 .5-.1l1.5-.5H9l.1.1h.1c1 .5 2 1 3.1 1.3h.2c.1 0 .1.1.2.2l.7 1.4c.2.5.7.8 1.3.8h2.7c.5 0 1-.3 1.3-.8l.7-1.4c0-.1.1-.2.2-.2h.2c1.1-.3 2.1-.7 3.1-1.3h.1l.1-.1h.3l1.5.5c.1 0 .3.1.5.1.4 0 .7-.1 1-.4l1.9-1.9c.4-.4.5-1 .4-1.5l-.5-1.5V23l.1-.1v-.1c.5-1 1-2 1.3-3.1v-.2c0-.1.1-.1.2-.2l1.4-.7c.5-.2.8-.7.8-1.3v-2.7c0-.5-.4-1-.8-1.2zM16 27.1c-6.1 0-11.1-5-11.1-11.1S9.9 4.9 16 4.9s11.1 5 11.1 11.1-5 11.1-11.1 11.1z"}))}function fr(e){var t=e.id,n=e.logOut,r=e.activateDropdown;return j.createElement(gr,null,j.createElement("ul",null,j.createElement("li",{onClick:function(){return r(!1)}},j.createElement(N.rU,{to:"/profile/".concat(t)},j.createElement("div",null,j.createElement("span",null,j.createElement(dr,null)),j.createElement("span",null,"Profile")))),j.createElement("li",{onClick:function(){return r(!1)}},j.createElement("div",null,j.createElement("span",null,j.createElement(mr,null)),j.createElement("span",null,"Settings"))),j.createElement("li",null,j.createElement("button",{onClick:function(){return n()}},j.createElement("div",null,"Log Out")))))}var gr=D.ZP.div.withConfig({displayName:"NavbarSettings__MainContainter",componentId:"sc-p05748-0"})(["position:absolute;right:0px;top:63px;background-color:#242526;max-width:200px;width:100%;z-index:999;border-radius:6px;ul{li:nth-of-type(1){&:hover{border-top-right-radius:6px;border-top-left-radius:6px;}}li:nth-of-type(3){&:hover{border-bottom-right-radius:6px;border-bottom-left-radius:6px;}}li{cursor:pointer;list-style:none;display:flex;align-items:center;line-height:50px;height:50px;padding-left:10px;color:whitesmoke;&:hover{background-color:",";}a{text-decoration:none;color:whitesmoke;}div{display:flex;align-items:center;}span{margin-right:15px;font-weight:400;svg{fill:whitesmoke;}}}> li:nth-of-type(3){border-top:1px solid #dbdbdb;padding-top:12.5px;padding-bottom:5px;button{background-color:transparent;border:none;font-size:16px;color:whitesmoke;}}}"],(function(e){return e.theme.colors.buttonPrimary}));function hr(e){var t=e.user,n=e.logOut,r=(0,j.useState)(!1),o=(0,U.Z)(r,2),i=o[0],a=o[1];return j.createElement(xr,null,j.createElement("div",null,j.createElement(N.rU,{to:"/"},j.createElement(sr,null))),j.createElement("div",null,j.createElement(N.rU,{to:"/explore"},j.createElement(ur,null))),j.createElement("div",null,j.createElement("a",{onClick:function(){return a(!i)}},j.createElement("span",null,t.data&&j.createElement("img",{src:"".concat(t&&t.data.avatar),alt:"profile-icon"})))),j.createElement("div",null,i&&j.createElement(fr,{id:t.data._id,logOut:n,activateDropdown:a})))}var xr=D.ZP.div.withConfig({displayName:"NavbarLinks__Wrapper",componentId:"sc-kb32ah-0"})(["display:flex;div{margin-left:20px;a{cursor:pointer;}span{img{width:25px;height:25px;border-radius:50%;object-fit:cover;}}}"]);function br(e){var t=e.searchValue;console.log(t);var n=(0,rt.a)(at),r=n.data,o=n.loading;return n.error?j.createElement("div",null,"errror"):o?j.createElement(Y,null):j.createElement(vr,null,r&&r.getUsers.slice(0,20).filter((function(e){return e.username.includes(t)})).map((function(e){return j.createElement("div",{key:e._id},j.createElement(N.rU,{to:"/profile/".concat(e._id)},j.createElement("div",null,j.createElement("img",{src:e.avatar})),j.createElement("div",null,j.createElement("p",null,e.username),j.createElement("p",null,e.name))))})))}var vr=D.ZP.div.withConfig({displayName:"NavbarSearchDropDown__Wrapper",componentId:"sc-1cr0w4p-0"})(["position:absolute;display:flex;flex-direction:column;right:400px;top:61px;max-width:220px;width:100%;background-color:white;border:1px solid #dbdbdb;height:362px;z-index:999;overflow-x:hidden;overflow-y:auto;box-shadow:0 0 5px rgba(0,0,0,0.3);& > div{border-bottom:1px solid #dbdbdb;padding:8px 14px;}a{height:50px;align-items:center;display:flex;text-decoration:none;color:black;& > div:nth-of-type(1){img{width:35px;height:35px;border-radius:50%;object-fit:contain;margin-right:8px;}}& > div:nth-of-type(2){& > p:nth-of-type(1){font-weight:600;line-height:22px;font-size:14px;text-overflow:ellipsis;}& > p:nth-of-type(2){font-weight:300;font-size:14px;text-align:left;text-overflow:ellipsis;line-height:22px;}}}"]);function wr(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function yr(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?wr(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):wr(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Er(e){(0,q.Z)(e);(0,z.s0)();var t=(0,j.useState)({isSearchingActive:!1,inputValue:""}),n=(0,U.Z)(t,2),r=n[0],o=n[1],i=(0,rt.a)(it),a=i.data;i.loading;return(0,j.useEffect)((function(){""!==r.inputValue?o((function(e){return yr(yr({},e),{},{isSearchingActive:!0})})):o((function(e){return yr(yr({},e),{},{isSearchingActive:!1})}))}),[r.inputValue]),j.createElement(Pr,null,j.createElement(_r,null,j.createElement(kr,null,j.createElement("h3",null,j.createElement(N.rU,{to:"/"},"LaterGRAM"))),j.createElement(or,{clearText:function(){o((function(e){return yr(yr({},e),{},{inputValue:""})}))},value:r.inputValue,handleInput:function(e){o((function(t){return yr(yr({},t),{},{inputValue:e.target.value})}))},active:r.isSearchingActive}),j.createElement(hr,{user:a,logOut:function(){window.localStorage.clear(),window.location.reload()}}),r.isSearchingActive&&j.createElement(br,{searchValue:r.inputValue})))}var Pr=D.ZP.nav.withConfig({displayName:"Navbar__NavbarWrapper",componentId:"sc-1arkcou-0"})(["background:#18191a;border-bottom:1px solid #dbdbdb;display:flex;align-items:stretch;flex-shrink:0;margin:0;position:relative;justify-content:center;padding-left:30px;padding-right:30px;"]),_r=D.ZP.div.withConfig({displayName:"Navbar__Wrapper",componentId:"sc-1arkcou-1"})(["display:flex;justify-content:space-between;padding:1rem 0rem;max-width:975px;width:100%;position:relative;align-items:center;"]),kr=D.ZP.div.withConfig({displayName:"Navbar__LogoDivision",componentId:"sc-1arkcou-2"})(['h3{a{text-decoration:none;color:white;font-family:"Zen Tokyo Zoo",cursive;}}']);function Zr(){return j.createElement(j.Fragment,null,j.createElement(N.VK,null,j.createElement(z.Z5,null,j.createElement(z.AW,{exact:!0,path:"/",element:j.createElement(Bn,null,j.createElement(j.Fragment,null,j.createElement(Er,null),j.createElement(qn,null)))}),j.createElement(z.AW,{path:"/login",element:j.createElement(Ce,null)}),j.createElement(z.AW,{path:"/register",element:j.createElement(Qe,null)}),j.createElement(z.AW,{exact:!0,path:"/profile/:id",element:j.createElement(Bn,null,j.createElement(j.Fragment,null,j.createElement(Er,null),j.createElement(Zt,null)))}),j.createElement(z.AW,{exact:!0,path:"/post/:id",element:j.createElement(Bn,null,j.createElement(j.Fragment,null,j.createElement(Er,null),j.createElement(Hn,null)))}),j.createElement(z.AW,{exact:!0,path:"/explore",element:j.createElement(Bn,null,j.createElement(j.Fragment,null,j.createElement(Er,null),j.createElement(Wn,null)))}))))}var Ir=n(5614),Cr=n(76988),Or=n(53768),jr=n(89776),Sr=n.n(jr),Nr=n(37865),zr={colors:{buttonPrimary:"#4395FD",textPrimary:"#4395FD",backgroundColor:"#fff",textDefault:"#363636"}};const Dr=function(e){var t=e.children;return j.createElement(D.f6,{theme:zr},t)};function Ar(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Ur(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Ar(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Ar(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var qr=Sr()({uri:"https://laterrgram.herokuapp.com/graphql"}),Lr=(0,Nr.v)((function(e,t){var n=t.headers,r=localStorage.getItem("token");return{headers:Ur(Ur({},n),{},{authorization:r||""})}})),Mr=new Ir.f({cache:new Cr.h,link:Lr.concat(qr)});S.render(j.createElement(j.StrictMode,null,j.createElement(Or.e,{client:Mr},j.createElement(Dr,null,j.createElement(Zr,null)))),document.getElementById("root"))},43234:(e,t,n)=>{"use strict";n.d(t,{Z:()=>l});var r=n(87537),o=n.n(r),i=n(23645),a=n.n(i)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Zen+Tokyo+Zoo&display=swap);"]),a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap);"]),a.push([e.id,'/** @format */\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-family: "Roboto", sans-serif;\n}\n',"",{version:3,sources:["webpack://./style.css"],names:[],mappings:"AAAA,aAAa;;AAKb;EACE,sBAAsB;EACtB,SAAS;EACT,UAAU;EACV,SAAS;EACT,iCAAiC;AACnC",sourcesContent:['/** @format */\n\n@import url("https://fonts.googleapis.com/css2?family=Zen+Tokyo+Zoo&display=swap");\n@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap");\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-family: "Roboto", sans-serif;\n}\n'],sourceRoot:""}]);const l=a},28022:()=>{}},e=>{e.O(0,[216],(()=>{return t=29445,e(e.s=t);var t}));e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,